-- generates one secret code digit which is applied as an animation to the animatorfunction worldGlobals.SecretCodeHandler(codeName, digit, animator, viewProbe)  assert(digit >= 1 and digit <= 3, "invalid digit, range [1..3]")  -- try to find existing digit value in talos progress  local talosProgress = nexGetTalosProgress(worldGlobals.worldInfo)  local function GetDigitCodeName(digit)    return codeName .. digit  end  local digitCodeName = GetDigitCodeName(digit)  local digitValue = talosProgress:GetCodeValue(digitCodeName)  -- if existing value is not valid  if digitValue < 0 or digitValue > 9 then    -- generate a random digit in range 0..9 and set it as code for the digit    digitValue = mthClampF(mthRoundF(4 + mthRndF()*5), 4, 9)    talosProgress:SetCode(digitCodeName, digitValue)  end  print("Digit " .. digit .. " for code " .. codeName .. " is set to " .. digitValue)  -- set the digit as animator animation  if animator ~= nil then    animator:StartAnimation(tostring(digitValue))  end    local function GetDigitSeenVarName(digit)    return codeName .. "DigitSeen" .. digit  end    -- if this digit was not already seen  local thisDigitSeenVarName = GetDigitSeenVarName(digit)  if not talosProgress:IsVarSet(thisDigitSeenVarName) then    -- when the given view probe is looked at    if viewProbe ~= nil then      Wait(Event(worldGlobals.worldInfo.PlayerBorn))      viewProbe:EnableForAllCurrentPlayers()      Wait(Event(viewProbe.LookedAt))    end    --- we need to mark the digit as seen    talosProgress:SetVar(thisDigitSeenVarName)    print("Digit " .. digit .. " for code " .. codeName .. " is now seen")    -- and check whether all digits were seen so we can activate the code    local allDigitsSeen = true    for i = 1, 3 do      if i ~= digit and not talosProgress:IsVarSet(GetDigitSeenVarName(i)) then        allDigitsSeen = false        break      end    end    -- if all digits are seen, generate the code    if allDigitsSeen then      local codeValue = 0      local currentMultiplier = 100      for i = 1, 3 do        local currentDigitValue        if i ~= digit then          currentDigitValue = talosProgress:GetCodeValue(GetDigitCodeName(i))        else          currentDigitValue = digitValue        end        assert(currentDigitValue >= 0 and currentDigitValue <= 9)        codeValue = codeValue + currentDigitValue*currentMultiplier        currentMultiplier = currentMultiplier/10      end      -- finally, set the code to formed value      talosProgress:SetCode(codeName, codeValue)      print("Code " .. codeName .. " is now set to " .. codeValue)    end  end  end